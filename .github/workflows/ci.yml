name: running build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  TARGET_NAME: ${{ github.base_ref }}


jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs: 
      backend: ${{ steps.backend.outputs.should-run }}
    steps:
      - name: Check if backend jobs should run
        id: backend
        run: if [ "$(git diff --name-only $TARGET_REF | grep ^backend | wc -l)" -gt "0"]; then echo "should-run=true" >> $GITHUB_OUTPUT; fi


  build-backend:
    runs-on: ubuntu-latest
    container: rust:1.86-bullseye
    needs: detect-changes
    if: needs.detect-changes.outputs.should-run == 'true'
    defaults:
      run:
        working-directory: ./backend

    services:
      arcadiadb:
        image: postgres
        env:
          POSTGRES_USER: arcadia
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: setup env
      run: cp -f .env.ci .env

    - name: Build
      run: cargo build

    - name: Run tests
      run: cargo test

    - name: install sqlx
      run: cargo install sqlx-cli

    - name: Ensure schema and query metadata are in sync
      run: cargo sqlx prepare --check

  lint-format-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v4

    - run: git diff --name-status  -- path/to/directory/

    - name: Setup
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - run: npm ci
    - run: npm run lint
    - run: npm run check-format
    
